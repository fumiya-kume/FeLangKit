{
  "url": "https://github.com/fumiya-kume/FeLangKit/issues/144",
  "owner": "fumiya-kume",
  "repo": "FeLangKit",
  "issue_number": 144,
  "branch_name": "issue-144-20250530-162520",
  "title": "Migrate SemanticErrorReporterTests from XCTest to Swift Testing",
  "body": "# Migrate SemanticErrorReporterTests from XCTest to Swift Testing\n\n## Overview\nMigrate `Tests/FeLangCoreTests/Semantic/SemanticErrorReporterTests.swift` from the legacy XCTest framework to the modern Swift Testing framework to maintain consistency with the rest of the test suite.\n\n## Current Status\n- **Framework**: XCTest (legacy)\n- **Test Count**: 23 test methods\n- **File Size**: 439 lines\n- **Test Class**: `SemanticErrorReporterTests: XCTestCase`\n\n## Test Coverage Areas\nThe file contains comprehensive tests for:\n- **Basic Error Collection**: Single/multiple error collection\n- **Warning Collection**: Single/multiple warning collection  \n- **Configuration Testing**: Default, strict, fast, and custom configurations\n- **Error Deduplication**: Enabled/disabled deduplication with different positions\n- **Error Limiting**: Error count limits and zero max handling\n- **Error Correlation**: Enabled/disabled correlation functionality\n- **Lifecycle Management**: Finalization, reset, multiple finalization calls\n- **Concurrency**: Concurrent error and warning collection\n- **Edge Cases**: Empty collections, too many errors, boundary conditions\n\n## Migration Requirements\n\n### 1. Framework Conversion\n- [ ] Replace `import XCTest` with `import Testing`\n- [ ] Convert `final class SemanticErrorReporterTests: XCTestCase` to `@Suite(\"SemanticErrorReporter Tests\") struct SemanticErrorReporterTests`\n- [ ] Remove `override func setUp()` and `override func tearDown()` methods\n\n### 2. Test Method Migration\n- [ ] Convert all `func test*()` methods to `@Test func *()` format\n- [ ] Replace XCTest assertions with Swift Testing equivalents:\n  - `XCTAssertEqual()` → `#expect()`\n  - `XCTAssertTrue()` → `#expect()`\n  - `XCTAssertFalse()` → `#expect()`\n  - `XCTAssertThrows()` → `#expect(throws:)`\n\n### 3. Setup/Teardown Conversion\n- [ ] Convert `setUp()` instance variables to local test variables or shared test fixtures\n- [ ] Handle `symbolTable` and `sourcePosition` initialization within each test\n- [ ] Ensure proper resource cleanup without `tearDown()`\n\n## Validation Steps\n- [ ] Run `swift test --filter SemanticErrorReporterTests` to ensure all tests pass\n- [ ] Verify test execution time remains consistent\n- [ ] Run `swiftlint lint --fix && swiftlint lint` to ensure code quality\n- [ ] Confirm integration with existing Swift Testing test suite\n\n## Example Migration Pattern\n**Before (XCTest):**\n```swift\nfunc testCollectSingleError() {\n    let reporter = SemanticErrorReporter()\n    let error = SemanticError.undeclaredVariable(\"x\", at: sourcePosition)\n    \n    reporter.collect(error)\n    \n    XCTAssertEqual(reporter.errorCount, 1)\n    XCTAssertFalse(reporter.hasReachedErrorLimit)\n}\n```\n\n**After (Swift Testing):**\n```swift\n@Test func collectSingleError() {\n    let sourcePosition = SourcePosition(line: 1, column: 1, offset: 0)\n    let reporter = SemanticErrorReporter()\n    let error = SemanticError.undeclaredVariable(\"x\", at: sourcePosition)\n    \n    reporter.collect(error)\n    \n    #expect(reporter.errorCount == 1)\n    #expect(!reporter.hasReachedErrorLimit)\n}\n```\n\n## Success Criteria\n- [ ] All 23 test methods successfully migrated\n- [ ] Zero test failures after migration\n- [ ] Consistent test execution performance\n- [ ] Code passes SwiftLint validation\n\n---\n**Priority**: Medium  \n**Effort**: 2-3 hours",
  "state": "open",
  "labels": [
    "enhancement",
    "testing",
    "swift-testing"
  ],
  "assignees": [],
  "milestone": null,
  "created_at": "2025-05-30T05:23:48Z",
  "updated_at": "2025-05-30T05:23:48Z",
  "author": "fumiya-kume",
  "pr_title": "Resolve #144: Migrate SemanticErrorReporterTests from XCTest to Swift Testing"
}
